import React, { useState } from "react";

const ComponentBox = ({ name, color, onNameChange }) => {
  return (
    <div
      style={{
        width: "200px",
        height: "100px",
        border: "1px solid #ccc",
        borderRadius: "5px",
        margin: "10px",
        display: "flex",
        flexDirection: "column",
        alignItems: "center",
        justifyContent: "center",
        backgroundColor: color || "#fff",
      }}
    >
      <label>Component name:</label>
      <input
        type="text"
        value={name}
        onChange={(e) => onNameChange(e.target.value)}
        style={{ textAlign: "center", margin: "5px 0" }}
      />
    </div>
  );
};

const App = () => {
  const [components, setComponents] = useState([
    { id: 1, name: "first", color: "" },
    { id: 2, name: "second", color: "" },
    { id: 3, name: "third", color: "" },
    { id: 4, name: "fourth", color: "" },
    { id: 5, name: "fifth", color: "" },
    { id: 6, name: "sixth", color: "" },
  ]);

  const [selectedComponentId, setSelectedComponentId] = useState(1);
  const [selectedColor, setSelectedColor] = useState("");

  const handleNameChange = (id, newName) => {
    setComponents((prev) =>
      prev.map((comp) => (comp.id === id ? { ...comp, name: newName } : comp))
    );
  };

  const handleColorChange = (newColor) => {
    setComponents((prev) =>
      prev.map((comp) =>
        comp.id === selectedComponentId ? { ...comp, color: newColor } : comp
      )
    );
  };

  return (
    <div style={{ padding: "20px", textAlign: "center" }}>
      <h1>Description</h1>
      {/* Dropdowns */}
      <div style={{ display: "flex", justifyContent: "center", gap: "20px" }}>
        {/* Component Selector */}
        <select
          value={selectedComponentId}
          onChange={(e) => setSelectedComponentId(Number(e.target.value))}
        >
          {components.map((comp) => (
            <option key={comp.id} value={comp.id}>
              {comp.name}
            </option>
          ))}
        </select>
        {/* Color Selector */}
        <select
          value={selectedColor}
          onChange={(e) => {
            const newColor = e.target.value;
            setSelectedColor(newColor);
            handleColorChange(newColor);
          }}
        >
          <option value="">Choose color</option>
          <option value="lightblue">Light Blue</option>
          <option value="lightgreen">Light Green</option>
          <option value="lightcoral">Light Coral</option>
          <option value="lightgoldenrodyellow">Light Yellow</option>
        </select>
      </div>

      {/* Component Grid */}
      <div
        style={{
          display: "grid",
          gridTemplateColumns: "repeat(3, 1fr)",
          gap: "10px",
          marginTop: "20px",
        }}
      >
        {components.map((comp) => (
          <ComponentBox
            key={comp.id}
            name={comp.name}
            color={comp.color}
            onNameChange={(newName) => handleNameChange(comp.id, newName)}
          />
        ))}
      </div>
    </div>
  );
};

export default App;